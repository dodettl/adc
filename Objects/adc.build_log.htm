<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.36.0.0
Copyright (C) 2021 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Dominik Dettling, Corporate University of Mannheim, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.36.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.16
Assembler:       Armasm.exe V6.16
Linker/Locator:  ArmLink.exe V6.16
Library Manager: ArmAr.exe V6.16
Hex Converter:   FromElf.exe V6.16
CPU DLL:         SARMCM3.DLL V5.36.0.0
Dialog DLL:      DCM.DLL V1.17.3.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.9.0
Dialog DLL:      TCM.DLL V1.53.0.0
 
<h2>Project:</h2>
C:\Users\dettl\Desktop\Dominik\Programmieren\Studienarbeit 2\adc\adc.uvprojx
Project File Date:  04/12/2022

<h2>Output:</h2>
*** Using Compiler 'V6.16', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Build target 'Target 1'
adc.c(40): warning: implicit conversion changes signedness: 'volatile uint16_t' (aka 'volatile unsigned short') to 'int16_t' (aka 'short') [-Wsign-conversion]
                                        adcValue1 = adc1[n]; 
                                                  ~ ^~~~~~~
adc.c(41): warning: implicit conversion changes signedness: 'volatile uint16_t' (aka 'volatile unsigned short') to 'int16_t' (aka 'short') [-Wsign-conversion]
                                        adcValue2 = adc2[n];
                                                  ~ ^~~~~~~
adc.c(44): warning: implicit conversion loses integer precision: 'volatile int16_t' (aka 'volatile short') to 'int8_t' (aka 'signed char') [-Wimplicit-int-conversion]
                                        adc3[i3+1] = adcValue3;
                                                   ~ ^~~~~~~~~
adc.c(46): warning: implicit conversion changes signedness: 'volatile uint8_t' (aka 'volatile unsigned char') to 'int8_t' (aka 'signed char') [-Wsign-conversion]
                                        sendUSART2(sendValue);
                                        ~~~~~~~~~~ ^~~~~~~~~
adc.c(47): warning: implicit conversion loses integer precision: 'volatile uint16_t' (aka 'volatile unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
                                        sendValue = adc2[n];
                                                  ~ ^~~~~~~
adc.c(48): warning: implicit conversion changes signedness: 'volatile uint8_t' (aka 'volatile unsigned char') to 'int8_t' (aka 'signed char') [-Wsign-conversion]
                                        sendUSART2(sendValue);
                                        ~~~~~~~~~~ ^~~~~~~~~
adc.c(50): warning: implicit conversion changes signedness: 'volatile uint8_t' (aka 'volatile unsigned char') to 'int8_t' (aka 'signed char') [-Wsign-conversion]
                                        sendUSART2(sendValue);
                                        ~~~~~~~~~~ ^~~~~~~~~
adc.c(51): warning: implicit conversion loses integer precision: 'volatile uint16_t' (aka 'volatile unsigned short') to 'uint8_t' (aka 'unsigned char') [-Wimplicit-int-conversion]
                                        sendValue = adc1[n];
                                                  ~ ^~~~~~~
adc.c(52): warning: implicit conversion changes signedness: 'volatile uint8_t' (aka 'volatile unsigned char') to 'int8_t' (aka 'signed char') [-Wsign-conversion]
                                        sendUSART2(sendValue);
                                        ~~~~~~~~~~ ^~~~~~~~~
adc.c(61): warning: passing 'volatile uint16_t [20]' to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                memset(adc1, 0, sizeof(adc1));
                                       ^~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(321): note: passing argument to parameter here
extern _ARMABI void *memset(void * /*s*/, int /*c*/, size_t /*n*/) __attribute__((__nonnull__(1)));
                                        ^
adc.c(62): warning: passing 'volatile uint16_t [20]' to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                memset(adc2, 0, sizeof(adc2)); 
                                       ^~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(321): note: passing argument to parameter here
extern _ARMABI void *memset(void * /*s*/, int /*c*/, size_t /*n*/) __attribute__((__nonnull__(1)));
                                        ^
adc.c(63): warning: passing 'volatile int8_t [40]' to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                memset(adc3, 0, sizeof(adc3));
                                       ^~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(321): note: passing argument to parameter here
extern _ARMABI void *memset(void * /*s*/, int /*c*/, size_t /*n*/) __attribute__((__nonnull__(1)));
                                        ^
adc.c(77): warning: implicit conversion loses integer precision: 'volatile uint32_t' (aka 'volatile unsigned int') to 'uint16_t' (aka 'unsigned short') [-Wimplicit-int-conversion]
                        adc1[i1++]= ADC1->DR;
                                  ~ ~~~~~~^~
adc.c(82): warning: implicit conversion loses integer precision: 'volatile uint32_t' (aka 'volatile unsigned int') to 'uint16_t' (aka 'unsigned short') [-Wimplicit-int-conversion]
                        adc2[i2++] = ADC1->DR; 
                                   ~ ~~~~~~^~
adc.c(96): warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        GPIOA->MODER &= ~(3<<0);                //Clear Pin PA0 
                     ~~ ^~~~~~~
adc.c(145): warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        USART2->CR1 &= ~(1<<12);                                                                //Word length 
                    ~~ ^~~~~~~~
adc.c(160): warning: no newline at end of file [-Wnewline-eof]
}
 ^
adc.c(15): warning: no previous extern declaration for non-static variable 'adcValue1' [-Wmissing-variable-declarations]
volatile int16_t adcValue1, adcValue2, adcValue3; 
                 ^
adc.c(15): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int16_t adcValue1, adcValue2, adcValue3; 
         ^
adc.c(15): warning: no previous extern declaration for non-static variable 'adcValue2' [-Wmissing-variable-declarations]
volatile int16_t adcValue1, adcValue2, adcValue3; 
                            ^
adc.c(15): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int16_t adcValue1, adcValue2, adcValue3; 
         ^
adc.c(15): warning: no previous extern declaration for non-static variable 'adcValue3' [-Wmissing-variable-declarations]
volatile int16_t adcValue1, adcValue2, adcValue3; 
                                       ^
adc.c(15): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int16_t adcValue1, adcValue2, adcValue3; 
         ^
adc.c(16): warning: no previous extern declaration for non-static variable 'adc1' [-Wmissing-variable-declarations]
volatile uint16_t adc1[LENGTH]; 
                  ^
adc.c(16): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile uint16_t adc1[LENGTH]; 
         ^
adc.c(17): warning: no previous extern declaration for non-static variable 'adc2' [-Wmissing-variable-declarations]
volatile uint16_t adc2[LENGTH];
                  ^
adc.c(17): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile uint16_t adc2[LENGTH];
         ^
adc.c(18): warning: no previous extern declaration for non-static variable 'sendValue' [-Wmissing-variable-declarations]
volatile uint8_t sendValue; 
                 ^
adc.c(18): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile uint8_t sendValue; 
         ^
adc.c(20): warning: no previous extern declaration for non-static variable 'adc3' [-Wmissing-variable-declarations]
volatile int8_t adc3[LENGTH2]; 
                ^
adc.c(20): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int8_t adc3[LENGTH2]; 
         ^
adc.c(22): warning: no previous extern declaration for non-static variable 'i1' [-Wmissing-variable-declarations]
volatile int i1, i2, i3, n;
             ^
adc.c(22): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int i1, i2, i3, n;
         ^
adc.c(22): warning: no previous extern declaration for non-static variable 'i2' [-Wmissing-variable-declarations]
volatile int i1, i2, i3, n;
                 ^
adc.c(22): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int i1, i2, i3, n;
         ^
adc.c(22): warning: no previous extern declaration for non-static variable 'i3' [-Wmissing-variable-declarations]
volatile int i1, i2, i3, n;
                     ^
adc.c(22): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int i1, i2, i3, n;
         ^
adc.c(22): warning: no previous extern declaration for non-static variable 'n' [-Wmissing-variable-declarations]
volatile int i1, i2, i3, n;
                         ^
adc.c(22): note: declare 'static' if the variable is not intended to be used outside of this translation unit
volatile int i1, i2, i3, n;
         ^
28 warnings generated.
compiling adc.c...
linking...
Program Size: Code=1292 RO-data=468 RW-data=0 ZI-data=1784  
".\Objects\adc.axf" - 0 Error(s), 28 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.8.0.pack
                ARM.CMSIS.5.8.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.5.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32F4xx_DFP.2.16.0.pack
                Keil.STM32F4xx_DFP.2.16.0
                STMicroelectronics STM32F4 Series Device Support, Drivers and Examples
   * Component: Startup Version: 2.6.3

<h2>Collection of Component include folders:</h2>
  .\RTE\_Target_1
  C:\Users\dettl\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include
  C:\Users\dettl\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.5.0

   * Component: Keil::Device:Startup:2.6.3
      Source file:   MDK\Device\Source\ARM\STM32F446xx_OPT.s
      Include file:  Drivers\CMSIS\Device\ST\STM32F4xx\Include\stm32f4xx.h
      Source file:   MDK\Device\Source\ARM\STM32F4xx_OTP.s
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\arm\startup_stm32f446xx.s
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\system_stm32f4xx.c
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
